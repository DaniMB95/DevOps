buildscript {
  // ...
  dependencies {
    // ...
    classpath "org.gradle.api.plugins:base:1.1.0"
  }
}
plugins {
    id 'org.sonarqube' version '3.4.0.2513'
	id 'application'
    id 'java-library'
    id 'maven-publish'
}


apply plugin: "base"

apply plugin: 'jacoco'
apply plugin: 'java'
//apply plugin: 'checkstyle'
//env.VERSION=project.property('')
//version= project.properties['version']
version = "$version"

//version = '0.0.1-SNAPSHOT' //variable de entorno
group = 'gradle.test'
sourceCompatibility = '1.8'
repositories {
    mavenCentral()
    maven {

		url 'https://plugins.gradle.org/m2/'
	}
}

dependencies {
    testImplementation 'junit:junit:4.12'
    runtimeOnly group: 'org.sonarsource.scanner.gradle', name: 'sonarqube-gradle-plugin', version :'3.2.0'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name 'nexus'
            //url "http://10.0.2.15:8081/repository/maven-snapshots/"  //env
            url project.properties['systemProp.sonatypeUrl']
            allowInsecureProtocol true
            credentials {
                username project.properties['systemProp.sonatypeUsername']            //env
                password project.properties['systemProp.sonatypePassword']         //env
            }
        }
    }
}

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

test.finalizedBy("jacocoTestReport")


task runMainGame2048Team2(dependsOn: 'classes', type: JavaExec) {
    main = 'jalau.at18.katas.game2048.team2.Main'
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
}
application {
	// Define the main class for the application.
	mainClass = 'gradle.test.src'
}


